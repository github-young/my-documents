" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
"runtime! debian.vim
runtime! archlinux.vim

" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override
" any settings in these files.
" If you don't want that to happen, uncomment the below line to prevent
" defaults.vim from being loaded.
" let g:skip_defaults_vim = 1

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
"syntax on

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc")
  source /etc/vim/vimrc
endif

set encoding=utf-8
set fileencoding=utf-8
set nu
set cursorline
set cursorcolumn
set ruler
set smartindent
set autoindent
set tabstop=4
set expandtab
set incsearch
set ignorecase
set hlsearch
set showmatch
syntax enable
syntax on
set backspace=indent,eol,start
set mouse=a
set relativenumber

colo molokai
hi CocMenuSel ctermbg=237 guibg=#13354A
"set background=dark
set t_Co=256

inoremap JJ <Esc>
"inoremap j jzz
"inoremap k kzz

" ==================================
" Start Vim-Plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
endif
call plug#begin('~/.vim/plugged')

" Load plugins
"Plug 'lervag/vimtex'
"let g:tex_flavor = 'latex'
"let g:vimtex_compiler_latexk_engines = {'_':'-xelatex'}
"let g:vimtex_view_method = 'zathura'
"let g:vimtex_quickfix_mode=0

Plug 'sbdchd/neoformat'
Plug 'prettier/vim-prettier'
Plug 'mechatroner/rainbow_csv'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
let g:coc_disable_startup_warning = 1
call plug#end()
" End Vim-Plug

" ================================
" Start coc.vim
source ~/.vim/coc.nvim.rc

" ================================
" Start Fcitx 5 IM config for Vim
"autocmd InsertLeave * :silent !fcitx5-remote -c
"autocmd BufCreate *   :silent !fcitx5-remote -c
"autocmd BufEnter *    :silent !fcitx5-remote -c
"autocmd BufLeave *    :silent !fcitx5-remote -c
" End Fcitx 5

